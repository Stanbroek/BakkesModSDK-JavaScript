void bind_PlayerReplicationInfoWrapper([[maybe_unused]] v8::Isolate* isolate, v8pp::module& module)
{

	v8pp::class_<PlayerReplicationInfoWrapper> cl_PlayerReplicationInfoWrapper(isolate);
	cl_PlayerReplicationInfoWrapper.inherit<ActorWrapper>();
	cl_PlayerReplicationInfoWrapper.ctor<uintptr_t>();
	cl_PlayerReplicationInfoWrapper.set<OnlinePlatform(PlayerReplicationInfoWrapper::*)()>("GetPlatform", &PlayerReplicationInfoWrapper::GetPlatform);
	cl_PlayerReplicationInfoWrapper.set<int(PlayerReplicationInfoWrapper::*)()>("GetScore", &PlayerReplicationInfoWrapper::GetScore);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(int)>("SetScore", &PlayerReplicationInfoWrapper::SetScore);
	cl_PlayerReplicationInfoWrapper.set<int(PlayerReplicationInfoWrapper::*)()>("GetDeaths", &PlayerReplicationInfoWrapper::GetDeaths);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(int)>("SetDeaths", &PlayerReplicationInfoWrapper::SetDeaths);
	cl_PlayerReplicationInfoWrapper.set<unsigned char(PlayerReplicationInfoWrapper::*)()>("GetPing", &PlayerReplicationInfoWrapper::GetPing);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(unsigned char)>("SetPing", &PlayerReplicationInfoWrapper::SetPing);
	cl_PlayerReplicationInfoWrapper.set<unsigned char(PlayerReplicationInfoWrapper::*)()>("GetTTSSpeaker", &PlayerReplicationInfoWrapper::GetTTSSpeaker);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(unsigned char)>("SetTTSSpeaker", &PlayerReplicationInfoWrapper::SetTTSSpeaker);
	cl_PlayerReplicationInfoWrapper.set<int(PlayerReplicationInfoWrapper::*)()>("GetNumLives", &PlayerReplicationInfoWrapper::GetNumLives);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(int)>("SetNumLives", &PlayerReplicationInfoWrapper::SetNumLives);
	cl_PlayerReplicationInfoWrapper.set<UnrealStringWrapper(PlayerReplicationInfoWrapper::*)()>("GetPlayerName", &PlayerReplicationInfoWrapper::GetPlayerName);
	cl_PlayerReplicationInfoWrapper.set<UnrealStringWrapper(PlayerReplicationInfoWrapper::*)()>("GetOldName", &PlayerReplicationInfoWrapper::GetOldName);
	cl_PlayerReplicationInfoWrapper.set<int(PlayerReplicationInfoWrapper::*)()>("GetPlayerID", &PlayerReplicationInfoWrapper::GetPlayerID);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(int)>("SetPlayerID", &PlayerReplicationInfoWrapper::SetPlayerID);
	cl_PlayerReplicationInfoWrapper.set<TeamInfoWrapper(PlayerReplicationInfoWrapper::*)()>("GetTeam", &PlayerReplicationInfoWrapper::GetTeam);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(TeamInfoWrapper)>("SetTeam", &PlayerReplicationInfoWrapper::SetTeam);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbAdmin", &PlayerReplicationInfoWrapper::GetbAdmin);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbAdmin", &PlayerReplicationInfoWrapper::SetbAdmin);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbIsSpectator", &PlayerReplicationInfoWrapper::GetbIsSpectator);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbIsSpectator", &PlayerReplicationInfoWrapper::SetbIsSpectator);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbOnlySpectator", &PlayerReplicationInfoWrapper::GetbOnlySpectator);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbOnlySpectator", &PlayerReplicationInfoWrapper::SetbOnlySpectator);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbWaitingPlayer", &PlayerReplicationInfoWrapper::GetbWaitingPlayer);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbWaitingPlayer", &PlayerReplicationInfoWrapper::SetbWaitingPlayer);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbReadyToPlay", &PlayerReplicationInfoWrapper::GetbReadyToPlay);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbReadyToPlay", &PlayerReplicationInfoWrapper::SetbReadyToPlay);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbOutOfLives", &PlayerReplicationInfoWrapper::GetbOutOfLives);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbOutOfLives", &PlayerReplicationInfoWrapper::SetbOutOfLives);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbBot", &PlayerReplicationInfoWrapper::GetbBot);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbBot", &PlayerReplicationInfoWrapper::SetbBot);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbIsInactive", &PlayerReplicationInfoWrapper::GetbIsInactive);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbIsInactive", &PlayerReplicationInfoWrapper::SetbIsInactive);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbFromPreviousLevel", &PlayerReplicationInfoWrapper::GetbFromPreviousLevel);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbFromPreviousLevel", &PlayerReplicationInfoWrapper::SetbFromPreviousLevel);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbTimedOut", &PlayerReplicationInfoWrapper::GetbTimedOut);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbTimedOut", &PlayerReplicationInfoWrapper::SetbTimedOut);
	cl_PlayerReplicationInfoWrapper.set<long unsigned int(PlayerReplicationInfoWrapper::*)()>("GetbUnregistered", &PlayerReplicationInfoWrapper::GetbUnregistered);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetbUnregistered", &PlayerReplicationInfoWrapper::SetbUnregistered);
	cl_PlayerReplicationInfoWrapper.set<int(PlayerReplicationInfoWrapper::*)()>("GetStartTime", &PlayerReplicationInfoWrapper::GetStartTime);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(int)>("SetStartTime", &PlayerReplicationInfoWrapper::SetStartTime);
	cl_PlayerReplicationInfoWrapper.set<UnrealStringWrapper(PlayerReplicationInfoWrapper::*)()>("GetStringSpectating", &PlayerReplicationInfoWrapper::GetStringSpectating);
	cl_PlayerReplicationInfoWrapper.set<UnrealStringWrapper(PlayerReplicationInfoWrapper::*)()>("GetStringUnknown", &PlayerReplicationInfoWrapper::GetStringUnknown);
	cl_PlayerReplicationInfoWrapper.set<int(PlayerReplicationInfoWrapper::*)()>("GetKills", &PlayerReplicationInfoWrapper::GetKills);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(int)>("SetKills", &PlayerReplicationInfoWrapper::SetKills);
	cl_PlayerReplicationInfoWrapper.set<float(PlayerReplicationInfoWrapper::*)()>("GetExactPing", &PlayerReplicationInfoWrapper::GetExactPing);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(float)>("SetExactPing", &PlayerReplicationInfoWrapper::SetExactPing);
	cl_PlayerReplicationInfoWrapper.set<UnrealStringWrapper(PlayerReplicationInfoWrapper::*)()>("GetSavedNetworkAddress", &PlayerReplicationInfoWrapper::GetSavedNetworkAddress);
	// [deprecated] cl_PlayerReplicationInfoWrapper.set<SteamID(PlayerReplicationInfoWrapper::*)()>("GetUniqueId", &PlayerReplicationInfoWrapper::GetUniqueId);
	// [deprecated] cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(SteamID)>("SetUniqueId", &PlayerReplicationInfoWrapper::SetUniqueId);
	cl_PlayerReplicationInfoWrapper.set<UniqueIDWrapper(PlayerReplicationInfoWrapper::*)()>("GetUniqueIdWrapper", &PlayerReplicationInfoWrapper::GetUniqueIdWrapper);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(UniqueIDWrapper)>("SetUniqueId", &PlayerReplicationInfoWrapper::SetUniqueId);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("UnregisterPlayerFromSession", &PlayerReplicationInfoWrapper::UnregisterPlayerFromSession);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("RegisterPlayerWithSession", &PlayerReplicationInfoWrapper::RegisterPlayerWithSession);
	cl_PlayerReplicationInfoWrapper.set<bool(PlayerReplicationInfoWrapper::*)()>("IsInvalidName", &PlayerReplicationInfoWrapper::IsInvalidName);
	cl_PlayerReplicationInfoWrapper.set<unsigned char(PlayerReplicationInfoWrapper::*)()>("GetTeamNum", &PlayerReplicationInfoWrapper::GetTeamNum);
	// [deprecated] cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(SteamID &)>("SetUniqueId2", &PlayerReplicationInfoWrapper::SetUniqueId2);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(UniqueIDWrapper &)>("SetUniqueId2", &PlayerReplicationInfoWrapper::SetUniqueId2);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(PlayerReplicationInfoWrapper)>("SeamlessTravelTo", &PlayerReplicationInfoWrapper::SeamlessTravelTo);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(int)>("IncrementDeaths", &PlayerReplicationInfoWrapper::IncrementDeaths);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(PlayerReplicationInfoWrapper)>("CopyProperties", &PlayerReplicationInfoWrapper::CopyProperties);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(PlayerReplicationInfoWrapper)>("OverrideWith", &PlayerReplicationInfoWrapper::OverrideWith);
	cl_PlayerReplicationInfoWrapper.set<PlayerReplicationInfoWrapper(PlayerReplicationInfoWrapper::*)()>("Duplicate", &PlayerReplicationInfoWrapper::Duplicate);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(long unsigned int)>("SetWaitingPlayer", &PlayerReplicationInfoWrapper::SetWaitingPlayer);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(std::string)>("eventSetPlayerName", &PlayerReplicationInfoWrapper::eventSetPlayerName);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("Reset", &PlayerReplicationInfoWrapper::Reset);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("eventDestroyed", &PlayerReplicationInfoWrapper::eventDestroyed);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("Unregister2", &PlayerReplicationInfoWrapper::Unregister2);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(float)>("UpdatePing", &PlayerReplicationInfoWrapper::UpdatePing);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("RemoteUserDataReplicated", &PlayerReplicationInfoWrapper::RemoteUserDataReplicated);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)(TeamInfoWrapper)>("SetPlayerTeam", &PlayerReplicationInfoWrapper::SetPlayerTeam);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("eventClientFillRemoteUserData", &PlayerReplicationInfoWrapper::eventClientFillRemoteUserData);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("eventPostBeginPlay", &PlayerReplicationInfoWrapper::eventPostBeginPlay);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("eventOnOwnerChanged", &PlayerReplicationInfoWrapper::eventOnOwnerChanged);
	cl_PlayerReplicationInfoWrapper.set<void(PlayerReplicationInfoWrapper::*)()>("eventConstruct", &PlayerReplicationInfoWrapper::eventConstruct);

	module.set("PlayerReplicationInfoWrapper", cl_PlayerReplicationInfoWrapper);
}
