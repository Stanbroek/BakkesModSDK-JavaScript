GameEventWrapper [class]
public:
    GameEventWrapper::GameEventWrapper(uintptr_t mem) [constructor]
    GameEventWrapper::GameEventWrapper(GameEventWrapper const & other) [constructor]
    GameEventWrapper & GameEventWrapper::operator=(GameEventWrapper rhs) [member operator]
    GameEventWrapper::~GameEventWrapper() [destructor]
    unsigned char GameEventWrapper::GetReplicatedStateIndex() [member function]
    void GameEventWrapper::SetReplicatedStateIndex(unsigned char newReplicatedStateIndex) [member function]
    CarWrapper GameEventWrapper::GetCarArchetype() [member function]
    void GameEventWrapper::SetCarArchetype(CarWrapper newCarArchetype) [member function]
    int GameEventWrapper::GetCountdownTime() [member function]
    void GameEventWrapper::SetCountdownTime(int newCountdownTime) [member function]
    int GameEventWrapper::GetFinishTime() [member function]
    void GameEventWrapper::SetFinishTime(int newFinishTime) [member function]
    long unsigned int GameEventWrapper::GetbMultiplayer() [member function]
    void GameEventWrapper::SetbMultiplayer(long unsigned int newbMultiplayer) [member function]
    long unsigned int GameEventWrapper::GetbCountdownMessagesDisabled() [member function]
    void GameEventWrapper::SetbCountdownMessagesDisabled(long unsigned int newbCountdownMessagesDisabled) [member function]
    long unsigned int GameEventWrapper::GetbFillWithAI() [member function]
    void GameEventWrapper::SetbFillWithAI(long unsigned int newbFillWithAI) [member function]
    long unsigned int GameEventWrapper::GetbAllowQueueSaveReplay() [member function]
    void GameEventWrapper::SetbAllowQueueSaveReplay(long unsigned int newbAllowQueueSaveReplay) [member function]
    long unsigned int GameEventWrapper::GetbAllowReadyUp() [member function]
    void GameEventWrapper::SetbAllowReadyUp(long unsigned int newbAllowReadyUp) [member function]
    long unsigned int GameEventWrapper::GetbRestartingMatch() [member function]
    void GameEventWrapper::SetbRestartingMatch(long unsigned int newbRestartingMatch) [member function]
    long unsigned int GameEventWrapper::GetbRandomizedBotLoadouts() [member function]
    void GameEventWrapper::SetbRandomizedBotLoadouts(long unsigned int newbRandomizedBotLoadouts) [member function]
    long unsigned int GameEventWrapper::GetbHasLeaveMatchPenalty() [member function]
    void GameEventWrapper::SetbHasLeaveMatchPenalty(long unsigned int newbHasLeaveMatchPenalty) [member function]
    long unsigned int GameEventWrapper::GetbCanVoteToForfeit() [member function]
    void GameEventWrapper::SetbCanVoteToForfeit(long unsigned int newbCanVoteToForfeit) [member function]
    long unsigned int GameEventWrapper::GetbDisableAimAssist() [member function]
    void GameEventWrapper::SetbDisableAimAssist(long unsigned int newbDisableAimAssist) [member function]
    long unsigned int GameEventWrapper::GetbAwardAchievements() [member function]
    void GameEventWrapper::SetbAwardAchievements(long unsigned int newbAwardAchievements) [member function]
    int GameEventWrapper::GetMinPlayers() [member function]
    void GameEventWrapper::SetMinPlayers(int newMinPlayers) [member function]
    int GameEventWrapper::GetMaxPlayers() [member function]
    void GameEventWrapper::SetMaxPlayers(int newMaxPlayers) [member function]
    ArrayWrapper<ActorWrapper> GameEventWrapper::GetSpawnPoints() [member function]
    float GameEventWrapper::GetBotSkill() [member function]
    void GameEventWrapper::SetBotSkill(float newBotSkill) [member function]
    int GameEventWrapper::GetRespawnTime() [member function]
    void GameEventWrapper::SetRespawnTime(int newRespawnTime) [member function]
    float GameEventWrapper::GetMatchTimeDilation() [member function]
    void GameEventWrapper::SetMatchTimeDilation(float newMatchTimeDilation) [member function]
    PlayerControllerWrapper GameEventWrapper::GetActivator() [member function]
    void GameEventWrapper::SetActivator(PlayerControllerWrapper newActivator) [member function]
    CarWrapper GameEventWrapper::GetActivatorCar() [member function]
    void GameEventWrapper::SetActivatorCar(CarWrapper newActivatorCar) [member function]
    ArrayWrapper<ControllerWrapper> GameEventWrapper::GetPlayers() [member function]
    ArrayWrapper<PriWrapper> GameEventWrapper::GetPRIs() [member function]
    ArrayWrapper<CarWrapper> GameEventWrapper::GetCars() [member function]
    ArrayWrapper<PlayerControllerWrapper> GameEventWrapper::GetLocalPlayers() [member function]
    int GameEventWrapper::GetStartPointIndex() [member function]
    void GameEventWrapper::SetStartPointIndex(int newStartPointIndex) [member function]
    int GameEventWrapper::GetGameStateTimeRemaining() [member function]
    void GameEventWrapper::SetGameStateTimeRemaining(int newGameStateTimeRemaining) [member function]
    int GameEventWrapper::GetReplicatedGameStateTimeRemaining() [member function]
    void GameEventWrapper::SetReplicatedGameStateTimeRemaining(int newReplicatedGameStateTimeRemaining) [member function]
    float GameEventWrapper::GetBotBoostThreshold_vsAI() [member function]
    void GameEventWrapper::SetBotBoostThreshold_vsAI(float newBotBoostThreshold_vsAI) [member function]
    StructArrayWrapper<SteamID> GameEventWrapper::GetForfeitInitiatorIDs() [member function]
    StructArrayWrapper<SteamID> GameEventWrapper::GetBannedPlayers() [member function]
    PriWrapper GameEventWrapper::GetGameOwner() [member function]
    void GameEventWrapper::SetGameOwner(PriWrapper newGameOwner) [member function]
    UnrealStringWrapper GameEventWrapper::GetRichPresenceString() [member function]
    int GameEventWrapper::GetReplicatedRoundCountDownNumber() [member function]
    void GameEventWrapper::SetReplicatedRoundCountDownNumber(int newReplicatedRoundCountDownNumber) [member function]
    void GameEventWrapper::InitCountDown() [member function]
    void GameEventWrapper::StartCountdownTimer() [member function]
    void GameEventWrapper::AllowReadyUp2() [member function]
    PriWrapper GameEventWrapper::FindPlayerPRI(SteamID & UniqueId) [member function]
    void GameEventWrapper::HandlePlayerRemoved(GameEventWrapper GameEvent, PriWrapper PRI) [member function]
    void GameEventWrapper::UpdateGameOwner() [member function]
    void GameEventWrapper::SetGameOwner2(PriWrapper NewOwner) [member function]
    void GameEventWrapper::__GameEvent_TA__SetAllowReadyUp(PriWrapper P) [member function]
    bool GameEventWrapper::__GameEvent_TA__CheckPlayersReady(PriWrapper P) [member function]
    SteamID GameEventWrapper::__GameEvent_TA__CheckForBannedPlayers(PriWrapper PRI) [member function]
    void GameEventWrapper::__Pylon__ChangeNotifyFunc() [member function]
    void GameEventWrapper::PlayerResetTraining() [member function]
    bool GameEventWrapper::SuppressModalDialogs() [member function]
    bool GameEventWrapper::ShouldShowBallIndicator() [member function]
    void GameEventWrapper::CheckInitiatedForfeit(PriWrapper PRI) [member function]
    void GameEventWrapper::CheckChatBanned(PlayerControllerWrapper PC) [member function]
    PlayerControllerWrapper GameEventWrapper::FindPCForUniqueID(SteamID & PlayerID) [member function]
    bool GameEventWrapper::AllowSplitScreenPlayer() [member function]
    void GameEventWrapper::AddPlayerChatMessage(SteamID & PlayerID, unsigned char ChatChannel, TeamInfoWrapper Team, std::string Message) [member function]
    void GameEventWrapper::ConditionalStartSpectatorMatch() [member function]
    bool GameEventWrapper::IsPlayingTraining() [member function]
    bool GameEventWrapper::IsPlayingLan() [member function]
    bool GameEventWrapper::IsPlayingOffline() [member function]
    bool GameEventWrapper::IsPlayingPrivate() [member function]
    bool GameEventWrapper::IsPlayingPublic() [member function]
    bool GameEventWrapper::IsOnlineMultiplayer() [member function]
    void GameEventWrapper::CreateMatchType(std::string Options) [member function]
    bool GameEventWrapper::AllPlayersSelectedTeam() [member function]
    bool GameEventWrapper::CanQueSaveReplay() [member function]
    void GameEventWrapper::ForceMatchStart() [member function]
    void GameEventWrapper::ConditionalStartMatch() [member function]
    void GameEventWrapper::SaveLocalPlayerStats() [member function]
    bool GameEventWrapper::CanUseBallCam() [member function]
    bool GameEventWrapper::HandleNextGame() [member function]
    void GameEventWrapper::SetMaxPlayers2(int InMaxPlayers) [member function]
    void GameEventWrapper::SetRestartingMatch(long unsigned int bRestart) [member function]
    bool GameEventWrapper::ShouldBeFullScreen() [member function]
    bool GameEventWrapper::IsFinished() [member function]
    void GameEventWrapper::OnAllPlayersReady() [member function]
    void GameEventWrapper::CheckPlayersReady2() [member function]
    void GameEventWrapper::SetAllowReadyUp2(long unsigned int bAllow) [member function]
    void GameEventWrapper::AutoReadyPlayers() [member function]
    bool GameEventWrapper::ShouldAutoReadyUp(PriWrapper PRI) [member function]
    void GameEventWrapper::SendGoMessage(PlayerControllerWrapper Player) [member function]
    void GameEventWrapper::SendCountdownMessage(int Seconds, PlayerControllerWrapper Player) [member function]
    void GameEventWrapper::BroadcastCountdownMessage(int Seconds) [member function]
    void GameEventWrapper::BroadcastGoMessage() [member function]
    bool GameEventWrapper::AllowShutdown() [member function]
    float GameEventWrapper::GetRealDeltaTime(float ElapsedTime) [member function]
    void GameEventWrapper::SetTimeDilation(float NewTimeDilation) [member function]
    void GameEventWrapper::ClearRespawnList() [member function]
    void GameEventWrapper::ReplaceBotsWithAwaitingPlayers() [member function]
    int GameEventWrapper::GetRespawnTime2() [member function]
    void GameEventWrapper::RemoveCar(CarWrapper Car) [member function]
    void GameEventWrapper::AddCar(CarWrapper Car) [member function]
    void GameEventWrapper::TickRespawnTime(float DeltaTime) [member function]
    void GameEventWrapper::SetBotSkill2(float NewSkill) [member function]
    PlayerControllerWrapper GameEventWrapper::GetLocalPrimaryPlayer() [member function]
    bool GameEventWrapper::HasPlayerNamed(std::string PlayerName) [member function]
    void GameEventWrapper::RandomizeBots() [member function]
    bool GameEventWrapper::MoveToGround(ActorWrapper Mover, float HeightCheck) [member function]
    void GameEventWrapper::SetAllDriving(long unsigned int bDriving) [member function]
    void GameEventWrapper::OnFinished() [member function]
    void GameEventWrapper::StartCountDown() [member function]
    void GameEventWrapper::StartInitialCountDown() [member function]
    void GameEventWrapper::OnGameStateTimeLapsed() [member function]
    void GameEventWrapper::OnGameStateTimeUpdated() [member function]
    void GameEventWrapper::UpdateGameStateTime() [member function]
    void GameEventWrapper::SetGameStateTimeRemaining2(int StateTime, long unsigned int bFromReplication) [member function]
    void GameEventWrapper::SetGameStateTime2(int StateTime) [member function]
    void GameEventWrapper::OnPlayerRestarted(CarWrapper PlayerCar) [member function]
    void GameEventWrapper::TeleportCar(CarWrapper PlayerCar) [member function]
    void GameEventWrapper::OnCarSpawned(CarWrapper NewCar) [member function]
    bool GameEventWrapper::SpotIsEncroached(Vector & Spot) [member function]
    void GameEventWrapper::RandomizeSpawnPoints() [member function]
    void GameEventWrapper::RestartPlayers() [member function]
    void GameEventWrapper::RemoveLocalPlayer(PlayerControllerWrapper Player) [member function]
    void GameEventWrapper::AddLocalPlayer(PlayerControllerWrapper Player) [member function]
    void GameEventWrapper::RemovePRI(PriWrapper PRI) [member function]
    void GameEventWrapper::AddPRI(PriWrapper PRI) [member function]
    void GameEventWrapper::AddForfeitInitiator(SteamID & PlayerID) [member function]
    void GameEventWrapper::BanPlayerID(SteamID & PlayerID) [member function]
    int GameEventWrapper::GetMaxHumans() [member function]
    int GameEventWrapper::GetNumHumans() [member function]
    bool GameEventWrapper::FindBotReplacement(PriWrapper PRI) [member function]
    void GameEventWrapper::UpdateBotCount() [member function]
    void GameEventWrapper::TimerUpdateBotCount() [member function]
    void GameEventWrapper::InitBotSkill() [member function]
    void GameEventWrapper::InitMutators() [member function]
    void GameEventWrapper::HandleFinished(GameEventWrapper GameEvent) [member function]
    void GameEventWrapper::Init2(PlayerControllerWrapper InActivator) [member function]
    void GameEventWrapper::eventInitGame(std::string Options) [member function]
    void GameEventWrapper::OnGameStateChanged() [member function]
    void GameEventWrapper::OnCanVoteForfeitChanged() [member function]
    void GameEventWrapper::UpdateCanVoteToForfeit() [member function]
    bool GameEventWrapper::ShouldAllowVoteToForfeit() [member function]
    void GameEventWrapper::OnPenaltyChanged() [member function]
    void GameEventWrapper::UpdateLeaveMatchPenalty() [member function]
    GameSettingPlaylistWrapper GameEventWrapper::GetPlaylist() [member function]
    bool GameEventWrapper::ShouldHaveLeaveMatchPenalty() [member function]
    void GameEventWrapper::OnMatchSettingsChanged() [member function]
    void GameEventWrapper::ClearGameScoreFromCustomSettings() [member function]
    void GameEventWrapper::EventPlayerResetTraining(GameEventWrapper GameEvent) [member function]
private:
    GameEventWrapper::Impl [class declaration]
    GameEventWrapper::pimpl [variable]

