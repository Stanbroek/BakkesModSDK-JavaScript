void bind_GameEventWrapper([[maybe_unused]] v8::Isolate* isolate, v8pp::module& module)
{

	v8pp::class_<GameEventWrapper> cl_GameEventWrapper(isolate);
	cl_GameEventWrapper.inherit<ActorWrapper>();
	cl_GameEventWrapper.ctor<uintptr_t>();
	cl_GameEventWrapper.set<unsigned char(GameEventWrapper::*)()>("GetReplicatedStateIndex", &GameEventWrapper::GetReplicatedStateIndex);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(unsigned char)>("SetReplicatedStateIndex", &GameEventWrapper::SetReplicatedStateIndex);
	cl_GameEventWrapper.set<CarWrapper(GameEventWrapper::*)()>("GetCarArchetype", &GameEventWrapper::GetCarArchetype);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(CarWrapper)>("SetCarArchetype", &GameEventWrapper::SetCarArchetype);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetCountdownTime", &GameEventWrapper::GetCountdownTime);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetCountdownTime", &GameEventWrapper::SetCountdownTime);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetFinishTime", &GameEventWrapper::GetFinishTime);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetFinishTime", &GameEventWrapper::SetFinishTime);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbMultiplayer", &GameEventWrapper::GetbMultiplayer);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbMultiplayer", &GameEventWrapper::SetbMultiplayer);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbCountdownMessagesDisabled", &GameEventWrapper::GetbCountdownMessagesDisabled);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbCountdownMessagesDisabled", &GameEventWrapper::SetbCountdownMessagesDisabled);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbFillWithAI", &GameEventWrapper::GetbFillWithAI);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbFillWithAI", &GameEventWrapper::SetbFillWithAI);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbAllowQueueSaveReplay", &GameEventWrapper::GetbAllowQueueSaveReplay);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbAllowQueueSaveReplay", &GameEventWrapper::SetbAllowQueueSaveReplay);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbAllowReadyUp", &GameEventWrapper::GetbAllowReadyUp);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbAllowReadyUp", &GameEventWrapper::SetbAllowReadyUp);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbRestartingMatch", &GameEventWrapper::GetbRestartingMatch);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbRestartingMatch", &GameEventWrapper::SetbRestartingMatch);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbRandomizedBotLoadouts", &GameEventWrapper::GetbRandomizedBotLoadouts);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbRandomizedBotLoadouts", &GameEventWrapper::SetbRandomizedBotLoadouts);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbHasLeaveMatchPenalty", &GameEventWrapper::GetbHasLeaveMatchPenalty);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbHasLeaveMatchPenalty", &GameEventWrapper::SetbHasLeaveMatchPenalty);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbCanVoteToForfeit", &GameEventWrapper::GetbCanVoteToForfeit);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbCanVoteToForfeit", &GameEventWrapper::SetbCanVoteToForfeit);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbDisableAimAssist", &GameEventWrapper::GetbDisableAimAssist);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbDisableAimAssist", &GameEventWrapper::SetbDisableAimAssist);
	cl_GameEventWrapper.set<long unsigned int(GameEventWrapper::*)()>("GetbAwardAchievements", &GameEventWrapper::GetbAwardAchievements);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetbAwardAchievements", &GameEventWrapper::SetbAwardAchievements);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetMinPlayers", &GameEventWrapper::GetMinPlayers);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetMinPlayers", &GameEventWrapper::SetMinPlayers);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetMaxPlayers", &GameEventWrapper::GetMaxPlayers);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetMaxPlayers", &GameEventWrapper::SetMaxPlayers);
	cl_GameEventWrapper.set<ArrayWrapper<ActorWrapper>(GameEventWrapper::*)()>("GetSpawnPoints", &GameEventWrapper::GetSpawnPoints);
	cl_GameEventWrapper.set<float(GameEventWrapper::*)()>("GetBotSkill", &GameEventWrapper::GetBotSkill);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(float)>("SetBotSkill", &GameEventWrapper::SetBotSkill);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetRespawnTime", &GameEventWrapper::GetRespawnTime);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetRespawnTime", &GameEventWrapper::SetRespawnTime);
	cl_GameEventWrapper.set<float(GameEventWrapper::*)()>("GetMatchTimeDilation", &GameEventWrapper::GetMatchTimeDilation);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(float)>("SetMatchTimeDilation", &GameEventWrapper::SetMatchTimeDilation);
	cl_GameEventWrapper.set<PlayerControllerWrapper(GameEventWrapper::*)()>("GetActivator", &GameEventWrapper::GetActivator);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PlayerControllerWrapper)>("SetActivator", &GameEventWrapper::SetActivator);
	cl_GameEventWrapper.set<CarWrapper(GameEventWrapper::*)()>("GetActivatorCar", &GameEventWrapper::GetActivatorCar);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(CarWrapper)>("SetActivatorCar", &GameEventWrapper::SetActivatorCar);
	cl_GameEventWrapper.set<ArrayWrapper<ControllerWrapper>(GameEventWrapper::*)()>("GetPlayers", &GameEventWrapper::GetPlayers);
	cl_GameEventWrapper.set<ArrayWrapper<PriWrapper>(GameEventWrapper::*)()>("GetPRIs", &GameEventWrapper::GetPRIs);
	cl_GameEventWrapper.set<ArrayWrapper<CarWrapper>(GameEventWrapper::*)()>("GetCars", &GameEventWrapper::GetCars);
	cl_GameEventWrapper.set<ArrayWrapper<PlayerControllerWrapper>(GameEventWrapper::*)()>("GetLocalPlayers", &GameEventWrapper::GetLocalPlayers);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetStartPointIndex", &GameEventWrapper::GetStartPointIndex);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetStartPointIndex", &GameEventWrapper::SetStartPointIndex);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetGameStateTimeRemaining", &GameEventWrapper::GetGameStateTimeRemaining);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetGameStateTimeRemaining", &GameEventWrapper::SetGameStateTimeRemaining);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetReplicatedGameStateTimeRemaining", &GameEventWrapper::GetReplicatedGameStateTimeRemaining);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetReplicatedGameStateTimeRemaining", &GameEventWrapper::SetReplicatedGameStateTimeRemaining);
	cl_GameEventWrapper.set<float(GameEventWrapper::*)()>("GetBotBoostThreshold_vsAI", &GameEventWrapper::GetBotBoostThreshold_vsAI);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(float)>("SetBotBoostThreshold_vsAI", &GameEventWrapper::SetBotBoostThreshold_vsAI);
	cl_GameEventWrapper.set<StructArrayWrapper<SteamID>(GameEventWrapper::*)()>("GetForfeitInitiatorIDs", &GameEventWrapper::GetForfeitInitiatorIDs);
	cl_GameEventWrapper.set<StructArrayWrapper<SteamID>(GameEventWrapper::*)()>("GetBannedPlayers", &GameEventWrapper::GetBannedPlayers);
	cl_GameEventWrapper.set<PriWrapper(GameEventWrapper::*)()>("GetGameOwner", &GameEventWrapper::GetGameOwner);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PriWrapper)>("SetGameOwner", &GameEventWrapper::SetGameOwner);
	cl_GameEventWrapper.set<UnrealStringWrapper(GameEventWrapper::*)()>("GetRichPresenceString", &GameEventWrapper::GetRichPresenceString);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetReplicatedRoundCountDownNumber", &GameEventWrapper::GetReplicatedRoundCountDownNumber);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetReplicatedRoundCountDownNumber", &GameEventWrapper::SetReplicatedRoundCountDownNumber);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("InitCountDown", &GameEventWrapper::InitCountDown);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("StartCountdownTimer", &GameEventWrapper::StartCountdownTimer);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("AllowReadyUp2", &GameEventWrapper::AllowReadyUp2);
	cl_GameEventWrapper.set<PriWrapper(GameEventWrapper::*)(SteamID &)>("FindPlayerPRI", &GameEventWrapper::FindPlayerPRI);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(GameEventWrapper, PriWrapper)>("HandlePlayerRemoved", &GameEventWrapper::HandlePlayerRemoved);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("UpdateGameOwner", &GameEventWrapper::UpdateGameOwner);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PriWrapper)>("SetGameOwner2", &GameEventWrapper::SetGameOwner2);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PriWrapper)>("__GameEvent_TA__SetAllowReadyUp", &GameEventWrapper::__GameEvent_TA__SetAllowReadyUp);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)(PriWrapper)>("__GameEvent_TA__CheckPlayersReady", &GameEventWrapper::__GameEvent_TA__CheckPlayersReady);
	cl_GameEventWrapper.set<SteamID(GameEventWrapper::*)(PriWrapper)>("__GameEvent_TA__CheckForBannedPlayers", &GameEventWrapper::__GameEvent_TA__CheckForBannedPlayers);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("__Pylon__ChangeNotifyFunc", &GameEventWrapper::__Pylon__ChangeNotifyFunc);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("PlayerResetTraining", &GameEventWrapper::PlayerResetTraining);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("SuppressModalDialogs", &GameEventWrapper::SuppressModalDialogs);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("ShouldShowBallIndicator", &GameEventWrapper::ShouldShowBallIndicator);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PriWrapper)>("CheckInitiatedForfeit", &GameEventWrapper::CheckInitiatedForfeit);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PlayerControllerWrapper)>("CheckChatBanned", &GameEventWrapper::CheckChatBanned);
	cl_GameEventWrapper.set<PlayerControllerWrapper(GameEventWrapper::*)(SteamID &)>("FindPCForUniqueID", &GameEventWrapper::FindPCForUniqueID);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("AllowSplitScreenPlayer", &GameEventWrapper::AllowSplitScreenPlayer);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(SteamID &, unsigned char, TeamInfoWrapper, std::string)>("AddPlayerChatMessage", &GameEventWrapper::AddPlayerChatMessage);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("ConditionalStartSpectatorMatch", &GameEventWrapper::ConditionalStartSpectatorMatch);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("IsPlayingTraining", &GameEventWrapper::IsPlayingTraining);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("IsPlayingLan", &GameEventWrapper::IsPlayingLan);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("IsPlayingOffline", &GameEventWrapper::IsPlayingOffline);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("IsPlayingPrivate", &GameEventWrapper::IsPlayingPrivate);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("IsPlayingPublic", &GameEventWrapper::IsPlayingPublic);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("IsOnlineMultiplayer", &GameEventWrapper::IsOnlineMultiplayer);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(std::string)>("CreateMatchType", &GameEventWrapper::CreateMatchType);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("AllPlayersSelectedTeam", &GameEventWrapper::AllPlayersSelectedTeam);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("CanQueSaveReplay", &GameEventWrapper::CanQueSaveReplay);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("ForceMatchStart", &GameEventWrapper::ForceMatchStart);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("ConditionalStartMatch", &GameEventWrapper::ConditionalStartMatch);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("SaveLocalPlayerStats", &GameEventWrapper::SaveLocalPlayerStats);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("CanUseBallCam", &GameEventWrapper::CanUseBallCam);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("HandleNextGame", &GameEventWrapper::HandleNextGame);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetMaxPlayers2", &GameEventWrapper::SetMaxPlayers2);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetRestartingMatch", &GameEventWrapper::SetRestartingMatch);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("ShouldBeFullScreen", &GameEventWrapper::ShouldBeFullScreen);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("IsFinished", &GameEventWrapper::IsFinished);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("OnAllPlayersReady", &GameEventWrapper::OnAllPlayersReady);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("CheckPlayersReady2", &GameEventWrapper::CheckPlayersReady2);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetAllowReadyUp2", &GameEventWrapper::SetAllowReadyUp2);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("AutoReadyPlayers", &GameEventWrapper::AutoReadyPlayers);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)(PriWrapper)>("ShouldAutoReadyUp", &GameEventWrapper::ShouldAutoReadyUp);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PlayerControllerWrapper)>("SendGoMessage", &GameEventWrapper::SendGoMessage);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int, PlayerControllerWrapper)>("SendCountdownMessage", &GameEventWrapper::SendCountdownMessage);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("BroadcastCountdownMessage", &GameEventWrapper::BroadcastCountdownMessage);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("BroadcastGoMessage", &GameEventWrapper::BroadcastGoMessage);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("AllowShutdown", &GameEventWrapper::AllowShutdown);
	cl_GameEventWrapper.set<float(GameEventWrapper::*)(float)>("GetRealDeltaTime", &GameEventWrapper::GetRealDeltaTime);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(float)>("SetTimeDilation", &GameEventWrapper::SetTimeDilation);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("ClearRespawnList", &GameEventWrapper::ClearRespawnList);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("ReplaceBotsWithAwaitingPlayers", &GameEventWrapper::ReplaceBotsWithAwaitingPlayers);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetRespawnTime2", &GameEventWrapper::GetRespawnTime2);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(CarWrapper)>("RemoveCar", &GameEventWrapper::RemoveCar);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(CarWrapper)>("AddCar", &GameEventWrapper::AddCar);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(float)>("TickRespawnTime", &GameEventWrapper::TickRespawnTime);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(float)>("SetBotSkill2", &GameEventWrapper::SetBotSkill2);
	cl_GameEventWrapper.set<PlayerControllerWrapper(GameEventWrapper::*)()>("GetLocalPrimaryPlayer", &GameEventWrapper::GetLocalPrimaryPlayer);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)(std::string)>("HasPlayerNamed", &GameEventWrapper::HasPlayerNamed);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("RandomizeBots", &GameEventWrapper::RandomizeBots);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)(ActorWrapper, float)>("MoveToGround", &GameEventWrapper::MoveToGround);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(long unsigned int)>("SetAllDriving", &GameEventWrapper::SetAllDriving);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("OnFinished", &GameEventWrapper::OnFinished);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("StartCountDown", &GameEventWrapper::StartCountDown);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("StartInitialCountDown", &GameEventWrapper::StartInitialCountDown);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("OnGameStateTimeLapsed", &GameEventWrapper::OnGameStateTimeLapsed);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("OnGameStateTimeUpdated", &GameEventWrapper::OnGameStateTimeUpdated);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("UpdateGameStateTime", &GameEventWrapper::UpdateGameStateTime);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int, long unsigned int)>("SetGameStateTimeRemaining2", &GameEventWrapper::SetGameStateTimeRemaining2);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(int)>("SetGameStateTime2", &GameEventWrapper::SetGameStateTime2);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(CarWrapper)>("OnPlayerRestarted", &GameEventWrapper::OnPlayerRestarted);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(CarWrapper)>("TeleportCar", &GameEventWrapper::TeleportCar);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(CarWrapper)>("OnCarSpawned", &GameEventWrapper::OnCarSpawned);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)(Vector &)>("SpotIsEncroached", &GameEventWrapper::SpotIsEncroached);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("RandomizeSpawnPoints", &GameEventWrapper::RandomizeSpawnPoints);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("RestartPlayers", &GameEventWrapper::RestartPlayers);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PlayerControllerWrapper)>("RemoveLocalPlayer", &GameEventWrapper::RemoveLocalPlayer);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PlayerControllerWrapper)>("AddLocalPlayer", &GameEventWrapper::AddLocalPlayer);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PriWrapper)>("RemovePRI", &GameEventWrapper::RemovePRI);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PriWrapper)>("AddPRI", &GameEventWrapper::AddPRI);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(SteamID &)>("AddForfeitInitiator", &GameEventWrapper::AddForfeitInitiator);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(SteamID &)>("BanPlayerID", &GameEventWrapper::BanPlayerID);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetMaxHumans", &GameEventWrapper::GetMaxHumans);
	cl_GameEventWrapper.set<int(GameEventWrapper::*)()>("GetNumHumans", &GameEventWrapper::GetNumHumans);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)(PriWrapper)>("FindBotReplacement", &GameEventWrapper::FindBotReplacement);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("UpdateBotCount", &GameEventWrapper::UpdateBotCount);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("TimerUpdateBotCount", &GameEventWrapper::TimerUpdateBotCount);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("InitBotSkill", &GameEventWrapper::InitBotSkill);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("InitMutators", &GameEventWrapper::InitMutators);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(GameEventWrapper)>("HandleFinished", &GameEventWrapper::HandleFinished);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(PlayerControllerWrapper)>("Init2", &GameEventWrapper::Init2);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(std::string)>("eventInitGame", &GameEventWrapper::eventInitGame);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("OnGameStateChanged", &GameEventWrapper::OnGameStateChanged);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("OnCanVoteForfeitChanged", &GameEventWrapper::OnCanVoteForfeitChanged);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("UpdateCanVoteToForfeit", &GameEventWrapper::UpdateCanVoteToForfeit);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("ShouldAllowVoteToForfeit", &GameEventWrapper::ShouldAllowVoteToForfeit);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("OnPenaltyChanged", &GameEventWrapper::OnPenaltyChanged);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("UpdateLeaveMatchPenalty", &GameEventWrapper::UpdateLeaveMatchPenalty);
	cl_GameEventWrapper.set<GameSettingPlaylistWrapper(GameEventWrapper::*)()>("GetPlaylist", &GameEventWrapper::GetPlaylist);
	cl_GameEventWrapper.set<bool(GameEventWrapper::*)()>("ShouldHaveLeaveMatchPenalty", &GameEventWrapper::ShouldHaveLeaveMatchPenalty);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("OnMatchSettingsChanged", &GameEventWrapper::OnMatchSettingsChanged);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)()>("ClearGameScoreFromCustomSettings", &GameEventWrapper::ClearGameScoreFromCustomSettings);
	cl_GameEventWrapper.set<void(GameEventWrapper::*)(GameEventWrapper)>("EventPlayerResetTraining", &GameEventWrapper::EventPlayerResetTraining);

	module.set("GameEventWrapper", cl_GameEventWrapper);
}
