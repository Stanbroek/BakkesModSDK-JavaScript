quat [struct]
public:
    quat::F [variable]
    quat::quat() [constructor]
    quat::quat(std::initializer_list<float> l) [constructor]
    float & quat::operator[](size_t i) [member operator]
    float const & quat::operator[](size_t i) const [member operator]
    quat::quat(quat const & arg0) [constructor]
    quat::~quat() [destructor]
    quat & quat::operator=(quat const & arg0) [member operator]

vec4 [struct]
public:
    vec4::F [variable]
    vec4::vec4() [constructor]
    vec4::vec4(quat q) [constructor]
    vec4::vec4(std::initializer_list<float> arg0) [constructor]
    float & vec4::operator[](size_t i) [member operator]
    float const & vec4::operator[](size_t i) const [member operator]
    vec4::vec4(vec4 const & arg0) [constructor]
    vec4::~vec4() [destructor]
    vec4 & vec4::operator=(vec4 const & arg0) [member operator]

vec3 [struct]
public:
    vec3::F [variable]
    vec3::vec3() [constructor]
    vec3::vec3(vec4 v) [constructor]
    vec3::vec3(quat q) [constructor]
    vec3::vec3(std::initializer_list<float> arg0) [constructor]
    float & vec3::operator[](size_t i) [member operator]
    float const & vec3::operator[](size_t i) const [member operator]
    vec3::vec3(vec3 const & arg0) [constructor]
    vec3::~vec3() [destructor]
    vec3 & vec3::operator=(vec3 const & arg0) [member operator]

vec2 [struct]
public:
    vec2::F [variable]
    vec2::vec2() [constructor]
    vec2::vec2(vec3 v) [constructor]
    vec2::vec2(std::initializer_list<float> arg0) [constructor]
    float & vec2::operator[](size_t i) [member operator]
    float const & vec2::operator[](size_t i) const [member operator]
    vec2::vec2(vec2 const & arg0) [constructor]
    vec2::~vec2() [destructor]
    vec2 & vec2::operator=(vec2 const & arg0) [member operator]

void vec2_add(vec2 r, vec2 const a, vec2 const b) [free function]
void vec2_sub(vec2 r, vec2 const a, vec2 const b) [free function]
void vec2_scale(vec2 r, vec2 const v, float const s) [free function]
float vec2_mul_inner(vec2 const a, vec2 const b) [free function]
float vec2_len(vec2 const v) [free function]
void vec2_norm(vec2 r, vec2 const v) [free function]
void vec2_min(vec2 r, vec2 a, vec2 b) [free function]
void vec2_max(vec2 r, vec2 a, vec2 b) [free function]
void vec3_add(vec3 r, vec3 const a, vec3 const b) [free function]
void vec3_sub(vec3 r, vec3 const a, vec3 const b) [free function]
void vec3_scale(vec3 r, vec3 const v, float const s) [free function]
float vec3_mul_inner(vec3 const a, vec3 const b) [free function]
float vec3_len(vec3 const v) [free function]
void vec3_norm(vec3 r, vec3 const v) [free function]
void vec3_min(vec3 r, vec3 a, vec3 b) [free function]
void vec3_max(vec3 r, vec3 a, vec3 b) [free function]
void vec4_add(vec4 r, vec4 const a, vec4 const b) [free function]
void vec4_sub(vec4 r, vec4 const a, vec4 const b) [free function]
void vec4_scale(vec4 r, vec4 const v, float const s) [free function]
float vec4_mul_inner(vec4 const a, vec4 const b) [free function]
float vec4_len(vec4 const v) [free function]
void vec4_norm(vec4 r, vec4 const v) [free function]
void vec4_min(vec4 r, vec4 a, vec4 b) [free function]
void vec4_max(vec4 r, vec4 a, vec4 b) [free function]
float vec3_dot(vec3 const a, vec3 const b) [free function]
void vec3_mul_cross(vec3 r, vec3 const a, vec3 const b) [free function]
void vec3_reflect(vec3 r, vec3 const v, vec3 const n) [free function]
void vec4_mul_cross(vec4 r, vec4 a, vec4 b) [free function]
void vec4_reflect(vec4 r, vec4 v, vec4 n) [free function]
mat4x4 [struct]
public:
    mat4x4::V [variable]
    mat4x4::mat4x4() [constructor]
    mat4x4::mat4x4(std::initializer_list<vec4> arg0) [constructor]
    vec4 & mat4x4::operator[](size_t i) [member operator]
    vec4 const & mat4x4::operator[](size_t i) const [member operator]
    mat4x4::mat4x4(mat4x4 const & arg0) [constructor]
    mat4x4::~mat4x4() [destructor]
    mat4x4 & mat4x4::operator=(mat4x4 const & arg0) [member operator]

void mat4x4_identity(mat4x4 M) [free function]
void mat4x4_dup(mat4x4 M, mat4x4 N) [free function]
void mat4x4_row(vec4 r, mat4x4 M, int i) [free function]
void mat4x4_col(vec4 r, mat4x4 M, int i) [free function]
void mat4x4_transpose(mat4x4 M, mat4x4 N) [free function]
void mat4x4_add(mat4x4 M, mat4x4 a, mat4x4 b) [free function]
void mat4x4_sub(mat4x4 M, mat4x4 a, mat4x4 b) [free function]
void mat4x4_scale(mat4x4 M, mat4x4 a, float k) [free function]
void mat4x4_scale_aniso(mat4x4 M, mat4x4 a, float x, float y, float z) [free function]
void mat4x4_mul(mat4x4 M, mat4x4 a, mat4x4 b) [free function]
void mat4x4_mul_vec4(vec4 r, mat4x4 M, vec4 v) [free function]
void mat4x4_translate(mat4x4 T, float x, float y, float z) [free function]
void mat4x4_translate_in_place(mat4x4 M, float x, float y, float z) [free function]
void mat4x4_from_vec3_mul_outer(mat4x4 M, vec3 a, vec3 b) [free function]
void mat4x4_rotate(mat4x4 R, mat4x4 M, float x, float y, float z, float angle) [free function]
void mat4x4_rotate_X(mat4x4 Q, mat4x4 M, float angle) [free function]
void mat4x4_rotate_Y(mat4x4 Q, mat4x4 M, float angle) [free function]
void mat4x4_rotate_Z(mat4x4 Q, mat4x4 M, float angle) [free function]
void mat4x4_invert(mat4x4 T, mat4x4 M) [free function]
void mat4x4_orthonormalize(mat4x4 R, mat4x4 M) [free function]
void mat4x4_frustum(mat4x4 M, float l, float r, float b, float t, float n, float f) [free function]
void mat4x4_ortho(mat4x4 M, float l, float r, float b, float t, float n, float f) [free function]
void mat4x4_perspective(mat4x4 m, float y_fov, float aspect, float n, float f) [free function]
void mat4x4_look_at(mat4x4 m, vec3 eye, vec3 center, vec3 up) [free function]
void quat_identity(quat q) [free function]
void quat_add(quat r, quat a, quat b) [free function]
void quat_sub(quat r, quat a, quat b) [free function]
void quat_mul(quat r, quat p, quat q) [free function]
void quat_scale(quat r, quat v, float s) [free function]
float quat_inner_product(quat a, quat b) [free function]
void quat_conj(quat r, quat q) [free function]
void quat_rotate(quat r, float angle, vec3 axis) [free function]
void quat_mul_vec3(vec3 r, quat q, vec3 v) [free function]
void mat4x4_from_quat(mat4x4 M, quat q) [free function]
void mat4x4o_mul_quat(mat4x4 R, mat4x4 M, quat q) [free function]
void quat_from_mat4x4(quat q, mat4x4 M) [free function]
