GameEditorWrapper [class]
public:
    GameEditorWrapper::GameEditorWrapper(uintptr_t mem) [constructor]
    GameEditorWrapper::GameEditorWrapper(GameEditorWrapper const & other) [constructor]
    GameEditorWrapper & GameEditorWrapper::operator=(GameEditorWrapper rhs) [member operator]
    GameEditorWrapper::~GameEditorWrapper() [destructor]
    int GameEditorWrapper::GetActiveRoundNumber() [member function]
    void GameEditorWrapper::SetActiveRoundNumber(int newActiveRoundNumber) [member function]
    int GameEditorWrapper::GetMaxRounds() [member function]
    void GameEditorWrapper::SetMaxRounds(int newMaxRounds) [member function]
    int GameEditorWrapper::GetHistoryPosition() [member function]
    void GameEditorWrapper::SetHistoryPosition(int newHistoryPosition) [member function]
    int GameEditorWrapper::GetMaxUndoHistory() [member function]
    void GameEditorWrapper::SetMaxUndoHistory(int newMaxUndoHistory) [member function]
    FXActorWrapper GameEditorWrapper::GetFXActorArchetype() [member function]
    void GameEditorWrapper::SetFXActorArchetype(FXActorWrapper newFXActorArchetype) [member function]
    FXActorWrapper GameEditorWrapper::GetFXActor() [member function]
    void GameEditorWrapper::SetFXActor(FXActorWrapper newFXActor) [member function]
    void GameEditorWrapper::RotateActor(PlayerControllerWrapper PC, long unsigned int bSnapOrientation) [member function]
    void GameEditorWrapper::PrevRound() [member function]
    void GameEditorWrapper::NextRound() [member function]
    void GameEditorWrapper::DecreaseTime() [member function]
    void GameEditorWrapper::IncreaseTime() [member function]
    void GameEditorWrapper::StopEditing(PlayerControllerWrapper PC) [member function]
    void GameEditorWrapper::StartEditing() [member function]
    void GameEditorWrapper::CycleActor(PlayerControllerWrapper PC) [member function]
    void GameEditorWrapper::ReleaseGrabbedActor(PlayerControllerWrapper PC) [member function]
    void GameEditorWrapper::ReleaseRotateActor(PlayerControllerWrapper PC) [member function]
    void GameEditorWrapper::ToggleRotateActor(PlayerControllerWrapper PC) [member function]
    void GameEditorWrapper::ToggleGrabActor(PlayerControllerWrapper PC) [member function]
    void GameEditorWrapper::ToggleReleaseActor(PlayerControllerWrapper PC) [member function]
    void GameEditorWrapper::ReleaseActor2(PlayerControllerWrapper PC) [member function]
    void GameEditorWrapper::GrabActor2(PlayerControllerWrapper PC) [member function]
    bool GameEditorWrapper::CanQueSaveReplay() [member function]
    bool GameEditorWrapper::ShouldUpdateCrosshair() [member function]
    int GameEditorWrapper::GetPlayerTeamNumber() [member function]
    bool GameEditorWrapper::CanAddHistory() [member function]
    void GameEditorWrapper::ToggleEditorRound() [member function]
    void GameEditorWrapper::CommitRedoRound() [member function]
    void GameEditorWrapper::ResetRound() [member function]
    void GameEditorWrapper::Save2() [member function]
    void GameEditorWrapper::Redo2(PlayerControllerWrapper PC) [member function]
    void GameEditorWrapper::Undo2(PlayerControllerWrapper PC) [member function]
    unsigned char GameEditorWrapper::GetOtherHistoryType(unsigned char HistoryType) [member function]
    void GameEditorWrapper::ClampUndoHistory() [member function]
    void GameEditorWrapper::ClearRedoHistory() [member function]
    void GameEditorWrapper::ClearAllHistory() [member function]
    bool GameEditorWrapper::DestroyActor(ActorWrapper A, unsigned char HistoryType) [member function]
    bool GameEditorWrapper::IsInEditorMode() [member function]
    void GameEditorWrapper::RemoveAllPointsFromScore(int TeamIndex) [member function]
    void GameEditorWrapper::RemovePointsFromScore(int PointsToRemove, int TeamIndex) [member function]
    void GameEditorWrapper::DeleteAllExistingActorsBasedOffSpawnList() [member function]
    bool GameEditorWrapper::RoundContainsASwitch() [member function]
    void GameEditorWrapper::EnableTriggers(long unsigned int bEnable) [member function]
    void GameEditorWrapper::HideCarSpawnPoints(long unsigned int bHide) [member function]
    void GameEditorWrapper::ResetSpawnLocations() [member function]
    void GameEditorWrapper::OnSpawnedArchetype(ActorWrapper SpawnedActor, unsigned char HistoryType) [member function]
    void GameEditorWrapper::SpawnArchetype(PlayerControllerWrapper Controller, int ArchetypeIndex) [member function]
    void GameEditorWrapper::IncrementSelectedSpawnArchetypeIndex(int Direction, int * Index) [member function]
    bool GameEditorWrapper::CanChangeTeam() [member function] [deprecated]
    void GameEditorWrapper::ResetBallsToDefaultPosition() [member function]
    void GameEditorWrapper::FireBalls() [member function]
    void GameEditorWrapper::Interact() [member function]
    bool GameEditorWrapper::ShouldResetBalls() [member function]
    void GameEditorWrapper::OnVehicleSetup(CarWrapper Car) [member function]
    void GameEditorWrapper::HandleVehicleSetup(CarWrapper Car) [member function]
    void GameEditorWrapper::OnPlayerRestarted(CarWrapper PlayerCar) [member function]
    bool GameEditorWrapper::ChooseTeam(int TeamIndex, PlayerControllerWrapper Player) [member function]
    void GameEditorWrapper::InitFX() [member function]
    void GameEditorWrapper::eventPostBeginPlay() [member function]
private:
    GameEditorWrapper::Impl [class declaration]
    GameEditorWrapper::pimpl [variable]

