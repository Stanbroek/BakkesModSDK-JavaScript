void bind_GameEditorWrapper([[maybe_unused]] v8::Isolate* isolate, v8pp::module& module)
{

	v8pp::class_<GameEditorWrapper> cl_GameEditorWrapper(isolate);
	cl_GameEditorWrapper.inherit<ServerWrapper>();
	cl_GameEditorWrapper.ctor<uintptr_t>();
	cl_GameEditorWrapper.set<int(GameEditorWrapper::*)()>("GetActiveRoundNumber", &GameEditorWrapper::GetActiveRoundNumber);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(int)>("SetActiveRoundNumber", &GameEditorWrapper::SetActiveRoundNumber);
	cl_GameEditorWrapper.set<int(GameEditorWrapper::*)()>("GetMaxRounds", &GameEditorWrapper::GetMaxRounds);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(int)>("SetMaxRounds", &GameEditorWrapper::SetMaxRounds);
	cl_GameEditorWrapper.set<int(GameEditorWrapper::*)()>("GetHistoryPosition", &GameEditorWrapper::GetHistoryPosition);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(int)>("SetHistoryPosition", &GameEditorWrapper::SetHistoryPosition);
	cl_GameEditorWrapper.set<int(GameEditorWrapper::*)()>("GetMaxUndoHistory", &GameEditorWrapper::GetMaxUndoHistory);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(int)>("SetMaxUndoHistory", &GameEditorWrapper::SetMaxUndoHistory);
	cl_GameEditorWrapper.set<FXActorWrapper(GameEditorWrapper::*)()>("GetFXActorArchetype", &GameEditorWrapper::GetFXActorArchetype);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(FXActorWrapper)>("SetFXActorArchetype", &GameEditorWrapper::SetFXActorArchetype);
	cl_GameEditorWrapper.set<FXActorWrapper(GameEditorWrapper::*)()>("GetFXActor", &GameEditorWrapper::GetFXActor);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(FXActorWrapper)>("SetFXActor", &GameEditorWrapper::SetFXActor);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper, long unsigned int)>("RotateActor", &GameEditorWrapper::RotateActor);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("PrevRound", &GameEditorWrapper::PrevRound);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("NextRound", &GameEditorWrapper::NextRound);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("DecreaseTime", &GameEditorWrapper::DecreaseTime);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("IncreaseTime", &GameEditorWrapper::IncreaseTime);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("StopEditing", &GameEditorWrapper::StopEditing);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("StartEditing", &GameEditorWrapper::StartEditing);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("CycleActor", &GameEditorWrapper::CycleActor);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("ReleaseGrabbedActor", &GameEditorWrapper::ReleaseGrabbedActor);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("ReleaseRotateActor", &GameEditorWrapper::ReleaseRotateActor);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("ToggleRotateActor", &GameEditorWrapper::ToggleRotateActor);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("ToggleGrabActor", &GameEditorWrapper::ToggleGrabActor);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("ToggleReleaseActor", &GameEditorWrapper::ToggleReleaseActor);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("ReleaseActor2", &GameEditorWrapper::ReleaseActor2);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("GrabActor2", &GameEditorWrapper::GrabActor2);
	cl_GameEditorWrapper.set<bool(GameEditorWrapper::*)()>("CanQueSaveReplay", &GameEditorWrapper::CanQueSaveReplay);
	cl_GameEditorWrapper.set<bool(GameEditorWrapper::*)()>("ShouldUpdateCrosshair", &GameEditorWrapper::ShouldUpdateCrosshair);
	cl_GameEditorWrapper.set<int(GameEditorWrapper::*)()>("GetPlayerTeamNumber", &GameEditorWrapper::GetPlayerTeamNumber);
	cl_GameEditorWrapper.set<bool(GameEditorWrapper::*)()>("CanAddHistory", &GameEditorWrapper::CanAddHistory);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("ToggleEditorRound", &GameEditorWrapper::ToggleEditorRound);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("CommitRedoRound", &GameEditorWrapper::CommitRedoRound);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("ResetRound", &GameEditorWrapper::ResetRound);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("Save2", &GameEditorWrapper::Save2);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("Redo2", &GameEditorWrapper::Redo2);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper)>("Undo2", &GameEditorWrapper::Undo2);
	cl_GameEditorWrapper.set<unsigned char(GameEditorWrapper::*)(unsigned char)>("GetOtherHistoryType", &GameEditorWrapper::GetOtherHistoryType);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("ClampUndoHistory", &GameEditorWrapper::ClampUndoHistory);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("ClearRedoHistory", &GameEditorWrapper::ClearRedoHistory);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("ClearAllHistory", &GameEditorWrapper::ClearAllHistory);
	cl_GameEditorWrapper.set<bool(GameEditorWrapper::*)(ActorWrapper, unsigned char)>("DestroyActor", &GameEditorWrapper::DestroyActor);
	cl_GameEditorWrapper.set<bool(GameEditorWrapper::*)()>("IsInEditorMode", &GameEditorWrapper::IsInEditorMode);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(int)>("RemoveAllPointsFromScore", &GameEditorWrapper::RemoveAllPointsFromScore);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(int, int)>("RemovePointsFromScore", &GameEditorWrapper::RemovePointsFromScore);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("DeleteAllExistingActorsBasedOffSpawnList", &GameEditorWrapper::DeleteAllExistingActorsBasedOffSpawnList);
	cl_GameEditorWrapper.set<bool(GameEditorWrapper::*)()>("RoundContainsASwitch", &GameEditorWrapper::RoundContainsASwitch);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(long unsigned int)>("EnableTriggers", &GameEditorWrapper::EnableTriggers);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(long unsigned int)>("HideCarSpawnPoints", &GameEditorWrapper::HideCarSpawnPoints);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("ResetSpawnLocations", &GameEditorWrapper::ResetSpawnLocations);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(ActorWrapper, unsigned char)>("OnSpawnedArchetype", &GameEditorWrapper::OnSpawnedArchetype);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(PlayerControllerWrapper, int)>("SpawnArchetype", &GameEditorWrapper::SpawnArchetype);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(int, int *)>("IncrementSelectedSpawnArchetypeIndex", &GameEditorWrapper::IncrementSelectedSpawnArchetypeIndex);
	// [deprecated] cl_GameEditorWrapper.set<bool(GameEditorWrapper::*)()>("CanChangeTeam", &GameEditorWrapper::CanChangeTeam);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("ResetBallsToDefaultPosition", &GameEditorWrapper::ResetBallsToDefaultPosition);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("FireBalls", &GameEditorWrapper::FireBalls);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("Interact", &GameEditorWrapper::Interact);
	cl_GameEditorWrapper.set<bool(GameEditorWrapper::*)()>("ShouldResetBalls", &GameEditorWrapper::ShouldResetBalls);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(CarWrapper)>("OnVehicleSetup", &GameEditorWrapper::OnVehicleSetup);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(CarWrapper)>("HandleVehicleSetup", &GameEditorWrapper::HandleVehicleSetup);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)(CarWrapper)>("OnPlayerRestarted", &GameEditorWrapper::OnPlayerRestarted);
	cl_GameEditorWrapper.set<bool(GameEditorWrapper::*)(int, PlayerControllerWrapper)>("ChooseTeam", &GameEditorWrapper::ChooseTeam);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("InitFX", &GameEditorWrapper::InitFX);
	cl_GameEditorWrapper.set<void(GameEditorWrapper::*)()>("eventPostBeginPlay", &GameEditorWrapper::eventPostBeginPlay);

	module.set("GameEditorWrapper", cl_GameEditorWrapper);
}
