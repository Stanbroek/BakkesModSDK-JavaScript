GuiManagerWrapper [class declaration]
BindingsWrapper [class declaration]
GameWrapper [class]
public:
    GameWrapper::GameWrapper(uintptr_t mem, long int pluginType, std::type_index idx) [constructor]
    GameWrapper::GameWrapper(GameWrapper const & other) [constructor]
    GameWrapper & GameWrapper::operator=(GameWrapper rhs) [member operator]
    GameWrapper::~GameWrapper() [destructor]
    bool GameWrapper::IsInGame() [member function]
    bool GameWrapper::IsInOnlineGame() [member function]
    bool GameWrapper::IsInFreeplay() [member function]
    bool GameWrapper::IsInReplay() [member function]
    bool GameWrapper::IsInCustomTraining() [member function]
    bool GameWrapper::IsSpectatingInOnlineGame() [member function]
    bool GameWrapper::IsPaused() [member function]
    bool GameWrapper::IsUsingEpicVersion() [member function]
    bool GameWrapper::IsUsingSteamVersion() [member function]
    int GameWrapper::GetSteamVersion() [member function]
    std::string GameWrapper::GetPsyBuildID() [member function]
    ServerWrapper GameWrapper::GetCurrentGameState() [member function]
    ServerWrapper GameWrapper::GetOnlineGame() [member function]
    ServerWrapper GameWrapper::GetGameEventAsServer() [member function]
    ReplayServerWrapper GameWrapper::GetGameEventAsReplay() [member function]
    MMRWrapper GameWrapper::GetMMRWrapper() [member function]
    CarWrapper GameWrapper::GetLocalCar() [member function]
    CameraWrapper GameWrapper::GetCamera() [member function]
    EngineTAWrapper GameWrapper::GetEngine() [member function]
    PluginManagerWrapper GameWrapper::GetPluginManager() [member function]
    GuiManagerWrapper GameWrapper::GetGUIManager() [member function]
    PlayerControllerWrapper GameWrapper::GetPlayerController() [member function]
    ItemsWrapper GameWrapper::GetItemsWrapper() [member function]
    MatchmakingWrapper GameWrapper::GetMatchmakingWrapper() [member function]
    SettingsWrapper GameWrapper::GetSettings() [member function]
    ModalWrapper GameWrapper::CreateModal(std::string const & title) [member function]
    TextInputModalWrapper GameWrapper::CreateTextInputModal(std::string const & title) [member function]
    void GameWrapper::OverrideParams(void * src, size_t memsize) [member function]
    void GameWrapper::SetTimeout(std::function<void (GameWrapper *)> theLambda, float time) [member function]
    void GameWrapper::Execute(std::function<void (GameWrapper *)> theLambda) [member function]
    void GameWrapper::RegisterDrawable(std::function<void (CanvasWrapper)> callback) [member function]
    void GameWrapper::UnregisterDrawables() [member function]
    std::string GameWrapper::GetFNameByIndex(int index) [member function]
    int GameWrapper::GetFNameIndexByString(std::string name) [member function]
    void GameWrapper::HookEvent(std::string eventName, std::function<void (std::basic_string<char>)> callback) [member function]
    void GameWrapper::UnhookEvent(std::string eventName) [member function]
    void GameWrapper::HookEventPost(std::string eventName, std::function<void (std::basic_string<char>)> callback) [member function]
    void GameWrapper::UnhookEventPost(std::string eventName) [member function]
    void GameWrapper::LogToChatbox(std::string text, std::string sender="BAKKESMOD") [member function]
    void GameWrapper::LoadToastTexture(std::string name, std::string path) [member function]
    void GameWrapper::LoadToastTexture(std::string name, std::wstring path) [member function]
    void GameWrapper::Toast(std::string title, std::string text, std::string texture="default", float timeout=3.5F, uint8_t toastType=0, float width=290.F, float height=60.F) [member function]
    bool GameWrapper::IsKeyPressed(int keyName) [member function]
    int GameWrapper::IsCursorVisible() [member function]
    void GameWrapper::ExecuteUnrealCommand(std::string command) [member function]
    std::string GameWrapper::GetRandomMap() [member function]
    std::string GameWrapper::GetCurrentMap() [member function]
    long long unsigned int GameWrapper::GetSteamID() [member function]
    std::string GameWrapper::GetEpicID() [member function]
    UniqueIDWrapper GameWrapper::GetUniqueID() [member function]
    UnrealStringWrapper GameWrapper::GetPlayerName() [member function]
    ClubDetailsWrapper GameWrapper::GetLocalClub() [member function]
    SequenceWrapper GameWrapper::GetMainSequence() [member function]
    void GameWrapper::SetBotLoadout(PriWrapper & bot_pri, BotLoadoutData const & loadout_data) [member function] [deprecated]
    Vector2 GameWrapper::GetScreenSize() [member function]
    float GameWrapper::GetSafeZoneRatio() [member function]
    float GameWrapper::GetUIScale() [member function]
    unsigned int GameWrapper::GetbMetric() [member function]
    UnrealStringWrapper GameWrapper::GetUILanguage() [member function]
    bool GameWrapper::GetbColorBlind() [member function]
    std::wstring GameWrapper::GetBakkesModPathW() [member function]
    std::wstring GameWrapper::GetDataFolderW() [member function]
    int GameWrapper::GetBakkesModVersion() [member function]
    void GameWrapper::PlayReplay(std::wstring const & path) [member function]
    void GameWrapper::HookEventWithCaller(std::string eventName, std::function<void (ServerWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCaller(std::string eventName, std::function<void (ActorWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCaller(std::string eventName, std::function<void (CarWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCaller(std::string eventName, std::function<void (CarComponentWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCaller(std::string eventName, std::function<void (PlayerControllerWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCaller(std::string eventName, std::function<void (BallWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCallerPost(std::string eventName, std::function<void (ActorWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCallerPost(std::string eventName, std::function<void (ServerWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCallerPost(std::string eventName, std::function<void (CarWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCallerPost(std::string eventName, std::function<void (CarComponentWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCallerPost(std::string eventName, std::function<void (PlayerControllerWrapper, void *, std::basic_string<char>)> callback) [member function]
    void GameWrapper::HookEventWithCallerPost(std::string eventName, std::function<void (BallWrapper, void *, std::basic_string<char>)> callback) [member function]
    GameWrapper::Impl [class declaration]
    GameWrapper::pimpl [variable]

