void bind_TrainingEditorWrapper([[maybe_unused]] v8::Isolate* isolate, v8pp::module& module)
{

	v8pp::class_<TrainingEditorWrapper> cl_TrainingEditorWrapper(isolate);
	cl_TrainingEditorWrapper.inherit<GameEditorWrapper>();
	cl_TrainingEditorWrapper.ctor<uintptr_t>();
	cl_TrainingEditorWrapper.set<float(TrainingEditorWrapper::*)()>("GetMinRoundTime", &TrainingEditorWrapper::GetMinRoundTime);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(float)>("SetMinRoundTime", &TrainingEditorWrapper::SetMinRoundTime);
	cl_TrainingEditorWrapper.set<float(TrainingEditorWrapper::*)()>("GetMaxRoundTime", &TrainingEditorWrapper::GetMaxRoundTime);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(float)>("SetMaxRoundTime", &TrainingEditorWrapper::SetMaxRoundTime);
	cl_TrainingEditorWrapper.set<long unsigned int(TrainingEditorWrapper::*)()>("GetbNoEditor", &TrainingEditorWrapper::GetbNoEditor);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(long unsigned int)>("SetbNoEditor", &TrainingEditorWrapper::SetbNoEditor);
	cl_TrainingEditorWrapper.set<long unsigned int(TrainingEditorWrapper::*)()>("GetbDisplayedRedoPenaltyMessage", &TrainingEditorWrapper::GetbDisplayedRedoPenaltyMessage);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(long unsigned int)>("SetbDisplayedRedoPenaltyMessage", &TrainingEditorWrapper::SetbDisplayedRedoPenaltyMessage);
	cl_TrainingEditorWrapper.set<long unsigned int(TrainingEditorWrapper::*)()>("GetbUnsavedChanges", &TrainingEditorWrapper::GetbUnsavedChanges);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(long unsigned int)>("SetbUnsavedChanges", &TrainingEditorWrapper::SetbUnsavedChanges);
	cl_TrainingEditorWrapper.set<int(TrainingEditorWrapper::*)()>("GetPointsScoredThisRound", &TrainingEditorWrapper::GetPointsScoredThisRound);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(int)>("SetPointsScoredThisRound", &TrainingEditorWrapper::SetPointsScoredThisRound);
	cl_TrainingEditorWrapper.set<int(TrainingEditorWrapper::*)()>("GetShotAttempt", &TrainingEditorWrapper::GetShotAttempt);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(int)>("SetShotAttempt", &TrainingEditorWrapper::SetShotAttempt);
	cl_TrainingEditorWrapper.set<int(TrainingEditorWrapper::*)()>("GetGoalieScore", &TrainingEditorWrapper::GetGoalieScore);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(int)>("SetGoalieScore", &TrainingEditorWrapper::SetGoalieScore);
	cl_TrainingEditorWrapper.set<unsigned char(TrainingEditorWrapper::*)()>("GetPlayTestType", &TrainingEditorWrapper::GetPlayTestType);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(unsigned char)>("SetPlayTestType", &TrainingEditorWrapper::SetPlayTestType);
	cl_TrainingEditorWrapper.set<ArrayWrapper<ActorWrapper>(TrainingEditorWrapper::*)()>("GetGoalMeshBlockers", &TrainingEditorWrapper::GetGoalMeshBlockers);
	cl_TrainingEditorWrapper.set<ActorWrapper(TrainingEditorWrapper::*)()>("GetGoalMeshBlockerArchetype", &TrainingEditorWrapper::GetGoalMeshBlockerArchetype);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(ActorWrapper)>("SetGoalMeshBlockerArchetype", &TrainingEditorWrapper::SetGoalMeshBlockerArchetype);
	cl_TrainingEditorWrapper.set<GameEditorSaveDataWrapper(TrainingEditorWrapper::*)()>("GetTrainingData", &TrainingEditorWrapper::GetTrainingData);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(GameEditorSaveDataWrapper)>("SetTrainingData", &TrainingEditorWrapper::SetTrainingData);
	cl_TrainingEditorWrapper.set<float(TrainingEditorWrapper::*)()>("GetSaveDelayTime", &TrainingEditorWrapper::GetSaveDelayTime);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(float)>("SetSaveDelayTime", &TrainingEditorWrapper::SetSaveDelayTime);
	cl_TrainingEditorWrapper.set<float(TrainingEditorWrapper::*)()>("GetSaveCooldown", &TrainingEditorWrapper::GetSaveCooldown);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(float)>("SetSaveCooldown", &TrainingEditorWrapper::SetSaveCooldown);
	cl_TrainingEditorWrapper.set<UnrealStringWrapper(TrainingEditorWrapper::*)()>("GetTrainingFileName", &TrainingEditorWrapper::GetTrainingFileName);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("OnLoadingMovieClosed", &TrainingEditorWrapper::OnLoadingMovieClosed);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("TagHistoryChanges", &TrainingEditorWrapper::TagHistoryChanges);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("MarkAsDirty", &TrainingEditorWrapper::MarkAsDirty);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("ForceTagHistoryChanges", &TrainingEditorWrapper::ForceTagHistoryChanges);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(PlayerControllerWrapper, ActorWrapper)>("SetTracedCrosshairActor", &TrainingEditorWrapper::SetTracedCrosshairActor);
	cl_TrainingEditorWrapper.set<bool(TrainingEditorWrapper::*)(BallWrapper)>("DestroyBall", &TrainingEditorWrapper::DestroyBall);
	cl_TrainingEditorWrapper.set<bool(TrainingEditorWrapper::*)()>("AllowDynamicCrowd", &TrainingEditorWrapper::AllowDynamicCrowd);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("BroadcastGoMessage", &TrainingEditorWrapper::BroadcastGoMessage);
	cl_TrainingEditorWrapper.set<int(TrainingEditorWrapper::*)()>("GetTotalRounds", &TrainingEditorWrapper::GetTotalRounds);
	cl_TrainingEditorWrapper.set<unsigned char(TrainingEditorWrapper::*)()>("GetDifficulty", &TrainingEditorWrapper::GetDifficulty);
	cl_TrainingEditorWrapper.set<unsigned char(TrainingEditorWrapper::*)()>("GetTrainingType", &TrainingEditorWrapper::GetTrainingType);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("Save2", &TrainingEditorWrapper::Save2);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("OnTrainingModeLoaded", &TrainingEditorWrapper::OnTrainingModeLoaded);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(int)>("DuplicateRound", &TrainingEditorWrapper::DuplicateRound);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(int, int)>("ReorderRound", &TrainingEditorWrapper::ReorderRound);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(float)>("SetRoundTimeLimit", &TrainingEditorWrapper::SetRoundTimeLimit);
	cl_TrainingEditorWrapper.set<bool(TrainingEditorWrapper::*)()>("HandleNextGame", &TrainingEditorWrapper::HandleNextGame);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("ResetBalls", &TrainingEditorWrapper::ResetBalls);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(std::string, PlayerControllerWrapper)>("Load2", &TrainingEditorWrapper::Load2);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("DestroyGoalMeshBlockers", &TrainingEditorWrapper::DestroyGoalMeshBlockers);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("UpdateGoalMeshBlocker", &TrainingEditorWrapper::UpdateGoalMeshBlocker);
	cl_TrainingEditorWrapper.set<int(TrainingEditorWrapper::*)()>("GetScore", &TrainingEditorWrapper::GetScore);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(int, int)>("RemovePointsFromScore", &TrainingEditorWrapper::RemovePointsFromScore);
	cl_TrainingEditorWrapper.set<bool(TrainingEditorWrapper::*)()>("ShowScorerGoalMessage", &TrainingEditorWrapper::ShowScorerGoalMessage);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("ShowResetRoundMessage", &TrainingEditorWrapper::ShowResetRoundMessage);
	cl_TrainingEditorWrapper.set<bool(TrainingEditorWrapper::*)()>("ShowPenaltyMessage", &TrainingEditorWrapper::ShowPenaltyMessage);
	cl_TrainingEditorWrapper.set<int(TrainingEditorWrapper::*)()>("GetPlayerTeamNumber", &TrainingEditorWrapper::GetPlayerTeamNumber);
	cl_TrainingEditorWrapper.set<int(TrainingEditorWrapper::*)()>("GetBallGoalScoreNumber", &TrainingEditorWrapper::GetBallGoalScoreNumber);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(int)>("RemoveAllPointsFromScore", &TrainingEditorWrapper::RemoveAllPointsFromScore);
	cl_TrainingEditorWrapper.set<bool(TrainingEditorWrapper::*)(long unsigned int)>("IncrementRound", &TrainingEditorWrapper::IncrementRound);
	cl_TrainingEditorWrapper.set<Vector(TrainingEditorWrapper::*)(Vector &, Vector &)>("AdjustToFloorLocation", &TrainingEditorWrapper::AdjustToFloorLocation);
	cl_TrainingEditorWrapper.set<ActorWrapper(TrainingEditorWrapper::*)(ActorWrapper, Vector &, Rotator &)>("SpawnArchetypeAtAndAdjustToFloor", &TrainingEditorWrapper::SpawnArchetypeAtAndAdjustToFloor);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(Vector &, Rotator &, Vector &, Rotator &)>("SpawnBallAndStartPointAt", &TrainingEditorWrapper::SpawnBallAndStartPointAt);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("SetupDefaultRound", &TrainingEditorWrapper::SetupDefaultRound);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(int, long unsigned int)>("SwitchToRoundNumber", &TrainingEditorWrapper::SwitchToRoundNumber);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(int)>("DeleteRound", &TrainingEditorWrapper::DeleteRound);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("RestartPlayTest", &TrainingEditorWrapper::RestartPlayTest);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("EndPlayTest", &TrainingEditorWrapper::EndPlayTest);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(unsigned char)>("StartPlayTest", &TrainingEditorWrapper::StartPlayTest);
	cl_TrainingEditorWrapper.set<bool(TrainingEditorWrapper::*)(int)>("CanPlayTestRoundNumber", &TrainingEditorWrapper::CanPlayTestRoundNumber);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(long unsigned int)>("SetUnsavedChanges", &TrainingEditorWrapper::SetUnsavedChanges);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("UpdateActiveRoundData", &TrainingEditorWrapper::UpdateActiveRoundData);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("StartNewRound", &TrainingEditorWrapper::StartNewRound);
	cl_TrainingEditorWrapper.set<bool(TrainingEditorWrapper::*)(int)>("IsValidRoundIndex", &TrainingEditorWrapper::IsValidRoundIndex);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(PlayerControllerWrapper)>("AddLocalPlayer", &TrainingEditorWrapper::AddLocalPlayer);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("OnInit", &TrainingEditorWrapper::OnInit);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("eventDestroyed", &TrainingEditorWrapper::eventDestroyed);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)()>("eventPostBeginPlay", &TrainingEditorWrapper::eventPostBeginPlay);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(long unsigned int)>("EventSaveResult", &TrainingEditorWrapper::EventSaveResult);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(long unsigned int)>("EventUnsavedChanges", &TrainingEditorWrapper::EventUnsavedChanges);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(TrainingEditorWrapper)>("EventPlaytestStarted", &TrainingEditorWrapper::EventPlaytestStarted);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(TrainingEditorWrapper)>("EventRoundChanged", &TrainingEditorWrapper::EventRoundChanged);
	cl_TrainingEditorWrapper.set<void(TrainingEditorWrapper::*)(TrainingEditorWrapper)>("EventRoundTimeChanged", &TrainingEditorWrapper::EventRoundTimeChanged);

	module.set("TrainingEditorWrapper", cl_TrainingEditorWrapper);
}
