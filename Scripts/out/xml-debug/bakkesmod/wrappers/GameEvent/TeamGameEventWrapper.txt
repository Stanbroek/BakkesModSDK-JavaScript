TeamGameEventWrapper [class]
public:
    TeamGameEventWrapper::TeamGameEventWrapper(uintptr_t mem) [constructor]
    TeamGameEventWrapper::TeamGameEventWrapper(TeamGameEventWrapper const & other) [constructor]
    TeamGameEventWrapper & TeamGameEventWrapper::operator=(TeamGameEventWrapper rhs) [member operator]
    TeamGameEventWrapper::~TeamGameEventWrapper() [destructor]
    ArrayWrapper<TeamWrapper> TeamGameEventWrapper::GetTeamArchetypes() [member function]
    ArrayWrapper<TeamWrapper> TeamGameEventWrapper::GetTeams() [member function]
    int TeamGameEventWrapper::GetMaxTeamSize() [member function]
    void TeamGameEventWrapper::SetMaxTeamSize(int newMaxTeamSize) [member function]
    int TeamGameEventWrapper::GetNumBots() [member function]
    void TeamGameEventWrapper::SetNumBots(int newNumBots) [member function]
    long unsigned int TeamGameEventWrapper::GetbMuteOppositeTeams() [member function]
    void TeamGameEventWrapper::SetbMuteOppositeTeams(long unsigned int newbMuteOppositeTeams) [member function]
    long unsigned int TeamGameEventWrapper::GetbDisableMutingOtherTeam() [member function]
    void TeamGameEventWrapper::SetbDisableMutingOtherTeam(long unsigned int newbDisableMutingOtherTeam) [member function]
    long unsigned int TeamGameEventWrapper::GetbForfeit() [member function]
    void TeamGameEventWrapper::SetbForfeit(long unsigned int newbForfeit) [member function]
    long unsigned int TeamGameEventWrapper::GetbUnfairTeams() [member function]
    void TeamGameEventWrapper::SetbUnfairTeams(long unsigned int newbUnfairTeams) [member function]
    long unsigned int TeamGameEventWrapper::GetbAlwaysAutoSelectTeam() [member function]
    void TeamGameEventWrapper::SetbAlwaysAutoSelectTeam(long unsigned int newbAlwaysAutoSelectTeam) [member function]
    void TeamGameEventWrapper::StartRematchVote() [member function]
    void TeamGameEventWrapper::CheckRematchVote() [member function]
    bool TeamGameEventWrapper::__GameEvent_Team_TA__AllTeamsHaveHumans(TeamWrapper Team) [member function]
    void TeamGameEventWrapper::UpdatePlayerShortcuts() [member function]
    void TeamGameEventWrapper::ClearTemporarySpawnSpots() [member function]
    bool TeamGameEventWrapper::ChooseTeam(int TeamIndex, PlayerControllerWrapper Player) [member function]
    bool TeamGameEventWrapper::CanChangeTeam() [member function] [deprecated]
    void TeamGameEventWrapper::OnPenaltyChanged() [member function]
    void TeamGameEventWrapper::OnTeamForfeited(TeamWrapper Team) [member function]
    void TeamGameEventWrapper::HandleTeamForfeit(TeamWrapper Team) [member function]
    void TeamGameEventWrapper::MuteOppositeTeams2(long unsigned int bMute) [member function]
    void TeamGameEventWrapper::UpdateBotCount() [member function]
    bool TeamGameEventWrapper::FindBotReplacement(PriWrapper PRI) [member function]
    void TeamGameEventWrapper::EndGame() [member function]
    void TeamGameEventWrapper::ForceNoContest() [member function]
    void TeamGameEventWrapper::AddTemporarySpawnSpot(TeamWrapper Team, CarWrapper Car) [member function]
    void TeamGameEventWrapper::HandleSelectedLoadout(PriWrapper PlayerPRI) [member function]
    void TeamGameEventWrapper::DestroyTeams() [member function]
    void TeamGameEventWrapper::OnAllTeamsCreated() [member function]
    void TeamGameEventWrapper::AssignCustomTeamSettings() [member function]
    void TeamGameEventWrapper::OnMatchSettingsChanged() [member function]
    bool TeamGameEventWrapper::AllTeamsHaveHumans2() [member function]
    bool TeamGameEventWrapper::AllTeamsCreated2() [member function]
    void TeamGameEventWrapper::SetTeam(int TeamNum, TeamWrapper NewTeam) [member function]
    void TeamGameEventWrapper::CreateTeams() [member function]
    void TeamGameEventWrapper::PreloadBots() [member function]
    void TeamGameEventWrapper::OnInit() [member function]
    void TeamGameEventWrapper::SetMaxTeamSize2(int MaxSize) [member function]
    void TeamGameEventWrapper::UpdateMaxTeamSize() [member function]
    void TeamGameEventWrapper::SetUnfairTeams(long unsigned int bUnfair) [member function]
    void TeamGameEventWrapper::InitBotSkill() [member function]
    void TeamGameEventWrapper::eventInitGame(std::string Options) [member function]
private:
    TeamGameEventWrapper::Impl [class declaration]
    TeamGameEventWrapper::pimpl [variable]

